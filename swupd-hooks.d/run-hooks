#!/bin/sh

#########################
# logging functions

# Until we set these up from the handler, this will do...
SWUPD_FD_INFO=1
SWUPD_FD_WARN=3
SWUPD_FD_ERROR=2
SWUPD_FD_DEBUG=4
SWUPD_FD_TRACE=5

function info () {
    echo "[${HOOK:-main-hook}]: $*" >& $SWUPD_FD_INFO
}


function warn () {
    echo "[${HOOK:-main-hook}]: $*" >& $SWUPD_FD_WARN
}


function error () {
    echo "[${HOOK:-main-hook}]: $*" >& $SWUPD_FD_ERROR
}


function debug () {
    echo "[${HOOK:-main-hook}]: $*" >& $SWUPD_FD_DEBUG
}


function trace () {
    echo "[${HOOK:-main-hook}]: $*" >& $SWUPD_FD_TRACE
}

#########################
# main script

# be somewhat pedantic
set -e -o pipefail

# hooks are co-hosted under our parent directory
HOOK_DIR=${0%/*}

# discover and sort hooks
HOOKS=$(ls $HOOK_DIR/[0-9]*-* |
            while read p; do
                b=${p##*/}; echo "${b%%-*}:$p"
            done | sort -n -k1 | cut -d : -f2)

# run all hooks until first failure
for h in $HOOKS; do
    if [ -e $h -a -x $h ]; then
        hook=${h##*/}
        case $hook in
            *~|*.swp) continue;;
        esac

        info "Executing hook $hook..."
        HOOK=$hook
        if ! . $h $*; then
           status=1
        else
           status=0
        fi
        HOOK=""
        if [ $status != 0 ]; then
            warn "hook $hook failed."
            exit $status
        fi
    fi
done

exit 0
